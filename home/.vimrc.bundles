if &compatible
  set nocompatible
end

if expand('<sfile>') == '/etc/vim/vimrc.bundles'
  call plug#begin('/etc/vim/plugged')
elseif has('nvim')
  call plug#begin(stdpath('data') . '/plugged')
else
  call plug#begin('~/.vim/plugged')
endif

Plug 'benmills/vimux'

Plug 'google/vim-searchindex'
if expand('<sfile>') == '/etc/vim/vimrc.bundles'
  Plug 'junegunn/fzf', { 'tag': '0.23.1', 'dir': '/etc/vim/fzf', 'do': './install --bin' }
else
  Plug 'junegunn/fzf', { 'tag': '0.23.1', 'dir': '~/.fzf', 'do': './install --bin' }
endif
Plug 'junegunn/fzf.vim'
Plug 'preservim/tagbar'
Plug 'tomtom/tcomment_vim'
Plug 'tpope/vim-obsession'
" Repeat used in surround and unimpaired
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'tpope/vim-vinegar'
Plug 'tpope/vim-vividchalk'

Plug 'dag/vim-fish'
Plug 'hashivim/vim-hashicorp-tools'
Plug 'pangloss/vim-javascript'
Plug 'pearofducks/ansible-vim'
Plug 'uarun/vim-protobuf'
Plug 'leafgarland/typescript-vim'
Plug 'rust-lang/rust.vim'

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

if has('nvim')
  " Collection of common configurations for the Nvim LSP client
  Plug 'neovim/nvim-lspconfig'

  " Extensions to built-in LSP, for example, providing type inlay hints
  Plug 'nvim-lua/lsp_extensions.nvim'

  " Autocompletion framework for built-in LSP
  Plug 'nvim-lua/completion-nvim'
endif

call plug#end()
